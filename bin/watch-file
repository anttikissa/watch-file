#!/usr/bin/env node
// vim: set filetype=javascript:

var fs = require('fs');
var crypto = require('crypto');

var optimist = require('optimist');

var usage =
"Wait until one of the files changes, then exit.\n\n\
Usage: watch-file <files...>";

var argv =  optimist
	.usage(usage)
	.boolean('h')
	.alias('h', 'help')
	.describe('h', 'Help')
	.argv;

if (argv.help) {
	process.stdout.write(optimist.help());
	process.exit(0);
}

var fileHashes = Object.create(null);

function hashFile(filename) {
	try {
		var contents = fs.readFileSync(filename);
		var sha1 = crypto.createHash('sha1');
		sha1.update(contents);
		return sha1.digest('hex');
	} catch (err) {
		if (err.code == 'ENOENT') {
			console.log("No such file: " + filename);
		}
		process.exit(1);
	}
};

var filenames = argv._;

filenames.forEach(function(filename) {
	var hash = hashFile(filename);

	fileHashes[filename] = hash;

		fs.watchFile(filename, { interval: 123 }, function(event, _) {
	//		console.log("File " + filename + ": got watch event.");
			if (fs.existsSync(filename)) {
				hash = hashFile(filename);
				if (hash != fileHashes[filename]) {
	//				console.log("File " + filename + " was actually changed.");
					process.exit(0);
				} 
			}
		});
});

