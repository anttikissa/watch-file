#!/usr/bin/env node
// vim: set filetype=javascript:

var fs = require('fs');
var crypto = require('crypto');

if (process.argv.length == 2) {
	console.log('watch-file -- wait until one of the files changes, then exit.');
	console.log('Usage: watch-file <files...>');
	process.exit(0);
}

var fileHashes = Object.create(null);

function hashFile(filename) {
	try {
		var contents = fs.readFileSync(filename);
		var sha1 = crypto.createHash('sha1');
		sha1.update(contents);
		return sha1.digest('hex');
	} catch (err) {
		if (err.code == 'ENOENT') {
			console.log("No such file: " + filename);
		} else {
			console.log("Error: " + err.code + ", filename: " + filename);
		}
		process.exit(1);
	}
};

var filenames = process.argv.slice(2);

filenames.forEach(function(filename) {
	if (!fs.existsSync(filename)) {
		console.log("File does not exist: " + filename);
		return;
	}
	
	if (!fs.statSync(filename).isFile()) {
		console.log("Not a file, ignoring: " + filename);
		return;
	}
	
	var hash = hashFile(filename);

	fileHashes[filename] = hash;

	fs.watchFile(filename, { interval: 123 }, function(event, _) {
//		console.log("File " + filename + ": got watch event.");
		if (fs.existsSync(filename)) {
			hash = hashFile(filename);
			if (hash != fileHashes[filename]) {
//				console.log("File " + filename + " was actually changed.");
				process.exit(0);
			} 
		}
	});
});

